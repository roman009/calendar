<?php

namespace App\Command;

use App\Entity\SmartInvite\Event;
use App\Entity\SmartInvite\Organizer;
use App\Entity\SmartInvite\Recipient;
use App\Entity\SmartInvite\SmartInvite;
use App\Repository\AccountUserRepository;
use App\Repository\SmartInvite\EventRepository;
use App\Repository\SmartInvite\OrganizerRepository;
use App\Repository\SmartInvite\RecipientRepository;
use App\Repository\SmartInvite\SmartInviteRepository;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

class SmartInviteTestCommand extends Command
{
    protected static $defaultName = 'app:smart-invite-test';
    /**
     * @var SmartInviteRepository
     */
    private $smartInviteRepository;
    /**
     * @var AccountUserRepository
     */
    private $accountUserRepository;
    /**
     * @var RecipientRepository
     */
    private $recipientRepository;
    /**
     * @var OrganizerRepository
     */
    private $organizerRepository;
    /**
     * @var EventRepository
     */
    private $eventRepository;

    public function __construct(
        SmartInviteRepository $smartInviteRepository,
        AccountUserRepository $accountUserRepository,
        RecipientRepository $recipientRepository,
        OrganizerRepository $organizerRepository,
        EventRepository $eventRepository,
        ?string $name = null
    ) {
        parent::__construct($name);
        $this->smartInviteRepository = $smartInviteRepository;
        $this->accountUserRepository = $accountUserRepository;
        $this->recipientRepository = $recipientRepository;
        $this->organizerRepository = $organizerRepository;
        $this->eventRepository = $eventRepository;
    }

    protected function configure()
    {
        parent::configure(); // TODO: Change the autogenerated stub
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $accoutUser = $this->accountUserRepository->find(1);

        $smartInvite = (new SmartInvite)
            ->setSmartInviteId('some-invite-iddd')
            ->setCallbackUrl('https://postb.in/XEkkZ1Sv')
            ->setAccountUser($accoutUser)
        ;
        $this->smartInviteRepository->persistAndFlush($smartInvite);

        $smartInvite
            ->setOrganizer((new Organizer)->setName('some organizer name')->setAccountUser($accoutUser))
            ->setRecipient((new Recipient)->setEmail('valeriu@buzila.ro')->setAccountUser($accoutUser))
            ->setEvent((new Event)
                ->setSummary('this is the event summary')
                ->setStart(new \DateTime('2019-03-28 11:00', new \DateTimeZone('CET')))
                ->setEnd(new \DateTime('2019-03-28 13:00', new \DateTimeZone('CET')))
                ->setLocation('1st floor')
                ->setTimezone('CET')
                ->setAccountUser($accoutUser)
            )
        ;

        $organizer = $smartInvite->getOrganizer();
        $organizer->setSmartInvite($smartInvite);

        $recipient = $smartInvite->getRecipient();
        $recipient->setSmartInvite($smartInvite);

        $event = $smartInvite->getEvent();
        $event->setSmartInvite($smartInvite);

        $this->recipientRepository->persistAndFlush($recipient);
        $this->organizerRepository->persistAndFlush($organizer);
        $this->eventRepository->persistAndFlush($event);

        dump($smartInvite);
        $this->smartInviteRepository->persistAndFlush($smartInvite);
        dump($smartInvite); die();


        dump($smartInvite);

    }
}