<?php

namespace App\Command;

use App\Repository\AccountUserRepository;
use App\Service\SmartInvite\Create\Create;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

class SmartInviteGenerationTestCommand extends Command
{
    protected static $defaultName = 'app:smart-invite-send-test';

    /**
     * @var AccountUserRepository
     */
    private $accountUserRepository;
    /**
     * @var \Swift_Mailer
     */
    private $mailer;
    /**
     * @var Create
     */
    private $create;

    public function __construct(
        Create $create,
        AccountUserRepository $accountUserRepository,
        \Swift_Mailer $mailer,
        ?string $name = null
    ) {
        parent::__construct($name);
        $this->accountUserRepository = $accountUserRepository;
        $this->mailer = $mailer;
        $this->create = $create;
    }

    protected function configure()
    {
        parent::configure(); // TODO: Change the autogenerated stub
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $accoutUser = $this->accountUserRepository->find(1);

        $smartInvite = $this->create->handle(
            $accoutUser,
            'some-unique-invite-iddd2',
            'https://enwvy220zidp.x.pipedream.net',
            'Valeriu the Organizer',
            'valeriu@buzilatestcompany.onmicrosoft.com',/*'valeriu.buzila@gmail.com',*/
            'Gigi Kent',
            'this is another event summary',
            new \DateTime('2019-03-28 15:00'),
            new \DateTime('2019-03-28 16:00'),
            'CET',
            '69th floor',
            'some cool event. you have to be there'
        );

        $messageAttachment = new \Swift_Attachment($smartInvite->getAttachments()[0]->getIcalendar(), 'cal.ics', 'text/calendar');
        $message = (new \Swift_Message('Hello Email'))
//            ->setFrom('postmaster@sandboxf05b190d1444418fb0b4407bfe487b16.mailgun.org')
            ->setFrom('test2@buzilatestcompany.onmicrosoft.com')
            ->setTo($smartInvite->getRecipient()->getEmail())
            ->setBody('see attached calendar invite', 'text/html')
            ->addPart('see attached calendar invite', 'text/plain')
            ->attach($messageAttachment);

        $messagePart = new \Swift_MimePart($smartInvite->getAttachments()[0]->getIcalendar(), 'text/calendar; method=REQUEST', 'UTF-8');
        $messagePart->setEncoder(new \Swift_Mime_ContentEncoder_PlainContentEncoder('7bit'));

        $message->attach($messagePart);

        $this->mailer->send($message);
    }
}
